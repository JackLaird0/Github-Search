{"version":3,"sources":["utilities/useFetchRepoById.js","components/search/index.js","components/repoCard/index.js","pages/home/index.js","utilities/useFetchRepos.js","utilities/generateApiQuery.js","pages/repoDetails/index.js","pages/searchResults/index.js","App.js","reportWebVitals.js","index.js"],"names":["intialState","repo","error","Search","props","onChange","e","target","name","value","handleChange","className","onSubmit","handleSubmit","type","placeholder","RepoCard","setSelectedRepo","repoInfo","owner","id","forks","language","stargazers_count","login","avatar_url","history","useHistory","onClick","push","src","alt","Star","CallSplit","ChevronRight","Home","data","setData","useState","queryInfo","setQueryInfo","endpoint","setEndpoint","response","url","initialState","repos","loading","setResponse","useEffect","fetch","then","res","json","items","prev","catch","finally","useFetchRepos","preventDefault","text","filter","encodeURIComponent","generateApiQuery","RepoDetails","selectedRepo","enabled","useParams","useFetchRepoById","Boolean","goBack","html_url","description","href","SearchResults","repoData","setRepoData","map","message","color","size","css","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.246acff6.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst intialState = {\n  repo: null,\n  error: null,\n};\n\nconst useFetchRepoById = (enabled) => {\n  const [response, setResponse] = useState(intialState);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (enabled && id) {\n      fetch(`https://api.github.com/repositories/${id}`)\n        .then((res) => res.json())\n        .then((repo) => {\n          setResponse((prev) => ({ ...prev, repo }));\n        })\n        .catch((error) => {\n          setResponse((prev) => ({ ...prev, error }));\n        });\n    }\n  }, [enabled]);\n\n  return response;\n};\n\nexport { useFetchRepoById };\n","import React from \"react\";\nimport \"./Search.scss\";\n\nfunction Search(props) {\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    props.handleChange(name, value);\n  };\n\n  return (\n    <div className=\"search\">\n      <div className=\"form-container\">\n        <div className=\"filter-options\">\n          <div className=\"select-container\">\n            <label>Sort By:</label>\n            <select name=\"filter\" onChange={(e) => onChange(e)}>\n              <option value=\"\">Best Match</option>\n              <option value=\"stars\"> Stars</option>\n            </select>\n          </div>\n          <div className=\"select-container\">\n            <label>Language:</label>\n            <select name=\"language\" onChange={(e) => onChange(e)}>\n              <option value=\"\"> Show All </option>\n              <option value=\"html\">HTML</option>\n              <option value=\"javascript\">JavaScript</option>\n              <option value=\"python\">Python</option>\n              <option value=\"java\">Java</option>\n              <option value=\"css\">CSS</option>\n              <option value=\"php\">PHP</option>\n              <option value=\"ruby\">Ruby</option>\n              <option value=\"c#\">C#</option>\n              <option value=\"typescript\">TypeScript</option>\n              <option value=\"c++\">C++</option>\n            </select>\n          </div>\n        </div>\n        <form onSubmit={(e) => props.handleSubmit(e)}>\n          <input\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"search-input\"\n            onChange={(e) => onChange(e)}\n          />\n          <button type=\"submit\" className=\"submit-button\">\n            Go\n          </button>\n        </form>\n      </div>\n      <div className=\"divider\" />\n    </div>\n  );\n}\n\nexport { Search };\n","import React from \"react\";\nimport \"./RepoCard.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChevronRight, Star, CallSplit } from \"@material-ui/icons\";\n\nfunction RepoCard({ setSelectedRepo, repoInfo }) {\n  const { name, owner, id, forks, language, stargazers_count } = repoInfo;\n  const { login, avatar_url } = owner;\n  const history = useHistory();\n\n  const onClick = () => {\n    setSelectedRepo(repoInfo);\n    history.push(`/repository/${id}`);\n  };\n\n  return (\n    <div className=\"card-container\" onClick={onClick}>\n      <div className=\"card-top\">\n        <div className=\"owner-info\">\n          <img src={avatar_url} alt=\"owner-avatar\" className=\"owner-avatar\" />\n          <p>{login}</p>\n        </div>\n        <div className=\"repo-stats\">\n          <Star />\n          <p className=\"watchers\">{stargazers_count}</p>\n          <CallSplit />\n          <p>{forks}</p>\n        </div>\n      </div>\n      <div className=\"card-bot\">\n        <div className=\"repo-details\">\n          <h2 className=\"repo-info repo-name\">{name}</h2>\n          {language && (\n            <div className=\"language\">\n              <h3 className=\"repo-info\">-</h3>\n              <p className=\"repo-info\">{language}</p>\n            </div>\n          )}\n        </div>\n        <ChevronRight className=\"arrow-icon\" />\n      </div>\n    </div>\n  );\n}\n\nexport { RepoCard };\n","import React, { useState } from \"react\";\nimport \"./Home.scss\";\nimport { generateApiQuery, useFetchRepos } from \"../../utilities\";\nimport { Search } from \"../../components\";\nimport { SearchResults } from \"../\";\n\nfunction Home({ data, setData, setSelectedRepo }) {\n  const [queryInfo, setQueryInfo] = useState({});\n  const [endpoint, setEndpoint] = useState(null);\n\n  const response = useFetchRepos(endpoint);\n\n  const compileQueryInfo = (name, value) => {\n    setQueryInfo((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setEndpoint(generateApiQuery(queryInfo));\n  };\n\n  return (\n    <div className=\"home\">\n      <Search handleSubmit={handleSubmit} handleChange={compileQueryInfo} />\n      <SearchResults\n        response={response}\n        setData={setData}\n        setSelectedRepo={setSelectedRepo}\n        data={data}\n      />\n    </div>\n  );\n}\n\nexport { Home };\n","import { useState, useEffect } from \"react\";\n\nconst useFetchRepos = (url) => {\n  const initialState = {\n    repos: null,\n    error: null,\n    loading: false,\n  };\n\n  const [response, setResponse] = useState(initialState);\n\n  useEffect(() => {\n    if (url) {\n      setResponse({ ...initialState, loading: true });\n\n      fetch(url)\n        .then((res) => res.json())\n        .then((data) => {\n          const repos = data.items;\n          setResponse((prev) => ({ ...prev, repos }));\n        })\n        .catch((error) => {\n          setResponse((prev) => ({ ...prev, error }));\n        })\n        .finally(() => {\n          setResponse((prev) => ({ ...prev, loading: false }));\n        });\n    }\n  }, [url]);\n\n  return response;\n};\n\nexport { useFetchRepos };\n","const generateApiQuery = (queryInfo) => {\n  const { text, language = \"\", filter = \"\" } = queryInfo;\n  return `https://api.github.com/search/repositories?q=${encodeURIComponent(\n    text\n  )}+language:${encodeURIComponent(language)}&sort=${encodeURIComponent(\n    filter\n  )}`;\n};\n\nexport { generateApiQuery };\n","import React, { useEffect } from \"react\";\nimport \"./RepoDetails.scss\";\nimport { Star, CallSplit } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFetchRepoById } from \"../../utilities\";\n\nfunction RepoDetails({ selectedRepo, setSelectedRepo }) {\n  const history = useHistory();\n  const { repo, error } = useFetchRepoById(!Boolean(selectedRepo));\n\n  useEffect(() => {\n    if (repo) {\n      setSelectedRepo(repo);\n    }\n  }, [repo]);\n\n  const goBack = () => {\n    history.push(`/`);\n  };\n\n  if (!selectedRepo) {\n    return <div>Loading</div>;\n  }\n\n  if (error) {\n    goBack();\n  }\n\n  const {\n    html_url,\n    owner,\n    name,\n    stargazers_count,\n    description,\n    language,\n    forks,\n  } = selectedRepo;\n\n  return (\n    <div className=\"repo-details\">\n      <button onClick={goBack} className=\"go-back\">\n        Go Back\n      </button>\n      <div className=\"repository-card\">\n        <div className=\"details-top\">\n          <div className=\"owner-info\">\n            <img\n              src={owner.avatar_url}\n              alt=\"owner-avatar\"\n              className=\"owner-avatar\"\n            />\n            <p>{owner.login}</p>\n            <a href={owner.html_url} alt=\"repository-link\" target=\"_blank\">\n              <button>View Profile</button>\n            </a>\n          </div>\n        </div>\n        <div className=\"details-bot\">\n          <div className=\"repo-stats\">\n            <Star />\n            <p>{stargazers_count}</p>\n            <CallSplit />\n            <p className=\"forks\">{forks}</p>\n          </div>\n          <div className=\"repo-title\">\n            <h2 className=\"repo-info repo-name\">{name}</h2>\n            {language && (\n              <div className=\"language\">\n                <h3 className=\"repo-info\">-</h3>\n                <p className=\"repo-info\">{language}</p>\n              </div>\n            )}\n          </div>\n          <p className=\"description\">{description}</p>\n          <a href={html_url} alt=\"repository-link\" target=\"_blank\">\n            <button className=\"repo-link\">View on Github</button>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { RepoDetails };\n","import React, { useEffect, useState } from \"react\";\nimport \"./SearchResults.scss\";\nimport { RepoCard } from \"../../components\";\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\nfunction SearchResults({ response, setData, setSelectedRepo, data }) {\n  const { repos, error, loading } = response;\n  const [repoData, setRepoData] = useState(null);\n\n  const override = \"display: block; margin: 0 auto;\";\n\n  useEffect(() => {\n    if (!repos && data) {\n      setRepoData(data);\n    }\n\n    if (repos) {\n      setRepoData(repos);\n      setData(repos);\n    }\n  }, [repos]);\n\n  if (repoData) {\n    return (\n      <div className=\"repo-container\">\n        {repoData.map((repoInfo) => {\n          return (\n            <RepoCard repoInfo={repoInfo} setSelectedRepo={setSelectedRepo} />\n          );\n        })}\n      </div>\n    );\n  }\n\n  if (error) {\n    return <h2 className=\"intro-text\">{error.message}</h2>;\n  }\n\n  if (loading) {\n    return (\n      <div>\n        <h2 className=\"intro-text\">Working on it!</h2>\n        <PuffLoader color=\"white\" size={80} css={override} loading={loading} />\n      </div>\n    );\n  }\n\n  return <h1 className=\"intro-text\">Search Repositories on GitHub!</h1>;\n}\n\nexport { SearchResults };\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport { Home, RepoDetails } from \"./pages\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [selectedRepo, setSelectedRepo] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\">\n        <Home setSelectedRepo={setSelectedRepo} data={data} setData={setData} />\n      </Route>\n      <Route path=\"/repository/:id\">\n        <RepoDetails\n          selectedRepo={selectedRepo}\n          setSelectedRepo={setSelectedRepo}\n        />\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}