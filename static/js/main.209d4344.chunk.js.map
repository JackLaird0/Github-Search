{"version":3,"sources":["components/Search/index.js","components/RepoCard/index.js","components/Loading/index.js","utilities/useFetchRepos.js","utilities/useFetchRepoById.js","pages/Home/index.js","utilities/generateApiQuery.js","pages/RepoDetails/index.js","pages/SearchResults/index.js","App.js","reportWebVitals.js","index.js"],"names":["Search","handleChange","handleSubmit","onChange","e","target","name","value","className","onSubmit","type","placeholder","RepoCard","setSelectedRepo","repoInfo","owner","id","forks","language","stargazers_count","login","avatar_url","history","useHistory","onClick","push","src","alt","Star","CallSplit","ChevronRight","Loading","loading","color","size","css","intialState","repo","error","Home","data","setData","useState","queryInfo","setQueryInfo","endpoint","setEndpoint","response","url","initialState","repos","setResponse","useEffect","fetch","then","res","json","items","prev","catch","finally","useFetchRepos","preventDefault","text","filter","encodeURIComponent","generateApiQuery","RepoDetails","selectedRepo","enabled","useParams","useFetchRepoById","Boolean","goBack","html_url","description","href","rel","SearchResults","repoData","setRepoData","message","map","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","process","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.209d4344.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Search.scss\";\n\nfunction Search({ handleChange, handleSubmit }) {\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    handleChange(name, value);\n  };\n\n  return (\n    <div className=\"search\">\n      <div className=\"form-container\">\n        <div className=\"filter-options\">\n          <div className=\"select-container\">\n            <label>Sort By:</label>\n            <select name=\"filter\" onChange={(e) => onChange(e)}>\n              <option value=\"\">Best Match</option>\n              <option value=\"stars\"> Stars</option>\n            </select>\n          </div>\n          <div className=\"select-container\">\n            <label>Language:</label>\n            <select name=\"language\" onChange={(e) => onChange(e)}>\n              <option value=\"\"> Show All </option>\n              <option value=\"html\">HTML</option>\n              <option value=\"javascript\">JavaScript</option>\n              <option value=\"python\">Python</option>\n              <option value=\"java\">Java</option>\n              <option value=\"css\">CSS</option>\n              <option value=\"php\">PHP</option>\n              <option value=\"ruby\">Ruby</option>\n              <option value=\"c#\">C#</option>\n              <option value=\"typescript\">TypeScript</option>\n              <option value=\"c++\">C++</option>\n            </select>\n          </div>\n        </div>\n        <form onSubmit={(e) => handleSubmit(e)}>\n          <input\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"search-input\"\n            onChange={(e) => onChange(e)}\n          />\n          <button type=\"submit\" className=\"submit-button\">\n            Go\n          </button>\n        </form>\n      </div>\n      <div className=\"divider\" />\n    </div>\n  );\n}\n\nexport { Search };\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { ChevronRight, Star, CallSplit } from \"@material-ui/icons\";\n\nimport \"./RepoCard.scss\";\n\nfunction RepoCard({ setSelectedRepo, repoInfo }) {\n  const { name, owner, id, forks, language, stargazers_count } = repoInfo;\n  const { login, avatar_url } = owner;\n  const history = useHistory();\n\n  const onClick = () => {\n    setSelectedRepo(repoInfo);\n    history.push(`/repository/${id}`);\n  };\n\n  return (\n    <div className=\"card-container\" onClick={onClick}>\n      <div className=\"card-top\">\n        <div className=\"owner-info\">\n          <img src={avatar_url} alt=\"owner-avatar\" className=\"owner-avatar\" />\n          <p>{login}</p>\n        </div>\n        <div className=\"repo-stats\">\n          <Star />\n          <p className=\"watchers\">{stargazers_count}</p>\n          <CallSplit />\n          <p>{forks}</p>\n        </div>\n      </div>\n      <div className=\"card-bot\">\n        <div className=\"repo-details\">\n          <h2 className=\"repo-info repo-name\">{name}</h2>\n          {language && (\n            <div className=\"language\">\n              <h3 className=\"repo-info\">-</h3>\n              <p className=\"repo-info\">{language}</p>\n            </div>\n          )}\n        </div>\n        <ChevronRight className=\"arrow-icon\" />\n      </div>\n    </div>\n  );\n}\n\nexport { RepoCard };\n","import React from \"react\";\n\nimport PuffLoader from \"react-spinners/PuffLoader\";\n\nfunction Loading({ loading }) {\n  return (\n    <div>\n      <h2 className=\"intro-text\">Working on it!</h2>\n      <PuffLoader\n        color=\"white\"\n        size={80}\n        css=\"display: block; margin: 0 auto;\"\n        loading={loading}\n      />\n    </div>\n  );\n}\n\nexport { Loading };\n","import { useState, useEffect } from \"react\";\n\nconst useFetchRepos = (url) => {\n  const initialState = {\n    repos: null,\n    error: null,\n    loading: false,\n  };\n\n  const [response, setResponse] = useState(initialState);\n\n  useEffect(() => {\n    if (url) {\n      setResponse({ ...initialState, loading: true });\n\n      fetch(url)\n        .then((res) => res.json())\n        .then((data) => {\n          const repos = data.items;\n          setResponse((prev) => ({ ...prev, repos }));\n        })\n        .catch((error) => {\n          setResponse((prev) => ({ ...prev, error }));\n        })\n        .finally(() => {\n          setResponse((prev) => ({ ...prev, loading: false }));\n        });\n    }\n  }, [url]);\n\n  return response;\n};\n\nexport { useFetchRepos };\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst intialState = {\n  repo: null,\n  error: null,\n};\n\nconst useFetchRepoById = (enabled) => {\n  const [response, setResponse] = useState(intialState);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (enabled && id) {\n      fetch(`https://api.github.com/repositories/${id}`)\n        .then((res) => res.json())\n        .then((repo) => {\n          setResponse((prev) => ({ ...prev, repo }));\n        })\n        .catch((error) => {\n          setResponse((prev) => ({ ...prev, error }));\n        });\n    }\n  }, [enabled, id]);\n\n  return response;\n};\n\nexport { useFetchRepoById };\n","import React, { useState } from \"react\";\n\nimport { SearchResults } from \"../\";\nimport { Search } from \"../../components\";\nimport { generateApiQuery, useFetchRepos } from \"../../utilities\";\n\nimport \"./Home.scss\";\n\nfunction Home({ data, setData, setSelectedRepo }) {\n  const [queryInfo, setQueryInfo] = useState({});\n  const [endpoint, setEndpoint] = useState(null);\n\n  const response = useFetchRepos(endpoint);\n\n  const compileQueryInfo = (name, value) => {\n    setQueryInfo((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setEndpoint(generateApiQuery(queryInfo));\n  };\n\n  return (\n    <div className=\"home\">\n      <Search handleSubmit={handleSubmit} handleChange={compileQueryInfo} />\n      <SearchResults\n        response={response}\n        setData={setData}\n        setSelectedRepo={setSelectedRepo}\n        data={data}\n      />\n    </div>\n  );\n}\n\nexport { Home };\n","const generateApiQuery = (queryInfo) => {\n  const { text, language = \"\", filter = \"\" } = queryInfo;\n\n  return `https://api.github.com/search/repositories?q=${encodeURIComponent(\n    text\n  )}+language:${encodeURIComponent(language)}&sort=${encodeURIComponent(\n    filter\n  )}`;\n};\n\nexport { generateApiQuery };\n","import React, { useEffect } from \"react\";\n\nimport { Star, CallSplit } from \"@material-ui/icons\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { Loading } from \"../../components\";\nimport { useFetchRepoById } from \"../../utilities\";\n\nimport \"./RepoDetails.scss\";\n\nfunction RepoDetails({ selectedRepo, setSelectedRepo }) {\n  const history = useHistory();\n  const { repo, error } = useFetchRepoById(!Boolean(selectedRepo));\n\n  useEffect(() => {\n    if (repo) {\n      setSelectedRepo(repo);\n    }\n  }, [repo, setSelectedRepo]);\n\n  const goBack = () => {\n    history.push(`/`);\n  };\n\n  if (!selectedRepo) {\n    return <Loading loading={true} />;\n  }\n\n  if (error) {\n    goBack();\n  }\n\n  const {\n    html_url,\n    owner,\n    name,\n    stargazers_count,\n    description,\n    language,\n    forks,\n  } = selectedRepo;\n\n  return (\n    <div className=\"repo-details\">\n      <button onClick={goBack} className=\"go-back\">\n        Go Back\n      </button>\n      <div className=\"repository-card\">\n        <div className=\"details-top\">\n          <div className=\"owner-info\">\n            <img\n              src={owner.avatar_url}\n              alt=\"owner-avatar\"\n              className=\"owner-avatar\"\n            />\n            <p>{owner.login}</p>\n            <a\n              href={owner.html_url}\n              alt=\"repository-link\"\n              target=\"_blank\"\n              rel=\"noreferrer\"\n            >\n              <button>View Profile</button>\n            </a>\n          </div>\n        </div>\n        <div className=\"details-bot\">\n          <div className=\"repo-stats\">\n            <Star />\n            <p>{stargazers_count}</p>\n            <CallSplit />\n            <p className=\"forks\">{forks}</p>\n          </div>\n          <div className=\"repo-title\">\n            <h2 className=\"repo-info repo-name\">{name}</h2>\n            {language && (\n              <div className=\"language\">\n                <h3 className=\"repo-info\">-</h3>\n                <p className=\"repo-info\">{language}</p>\n              </div>\n            )}\n          </div>\n          <p className=\"description\">{description}</p>\n          <a\n            href={html_url}\n            alt=\"repository-link\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <button className=\"repo-link\">View on Github</button>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport { RepoDetails };\n","import React, { useEffect, useState } from \"react\";\n\nimport { RepoCard, Loading } from \"../../components\";\n\nimport \"./SearchResults.scss\";\n\nfunction SearchResults({ response, setData, setSelectedRepo, data }) {\n  const { repos, error, loading } = response;\n  const [repoData, setRepoData] = useState(null);\n\n  useEffect(() => {\n    if (!repos && data) {\n      setRepoData(data);\n    }\n\n    if (repos) {\n      setRepoData(repos);\n      setData(repos);\n    }\n  }, [repos, data, setData]);\n\n  if (loading) return <Loading loading={loading} />;\n\n  if (error) {\n    return <h2 className=\"intro-text\">{error.message}</h2>;\n  }\n\n  if (repoData) {\n    return (\n      <div className=\"repo-container\">\n        {repoData.map((repoInfo) => {\n          return (\n            <RepoCard repoInfo={repoInfo} setSelectedRepo={setSelectedRepo} />\n          );\n        })}\n      </div>\n    );\n  }\n\n  return <h1 className=\"intro-text\">Search Repositories on GitHub!</h1>;\n}\n\nexport { SearchResults };\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Route } from \"react-router-dom\";\nimport { Home, RepoDetails } from \"./pages\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const [selectedRepo, setSelectedRepo] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\">\n        <Home setSelectedRepo={setSelectedRepo} data={data} setData={setData} />\n      </Route>\n      <Route path=\"/repository/:id\">\n        <RepoDetails\n          selectedRepo={selectedRepo}\n          setSelectedRepo={setSelectedRepo}\n        />\n      </Route>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}